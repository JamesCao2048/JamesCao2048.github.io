---
---
@inproceedings{ASE20,
  author    = {Junming Cao and
               Shouliang Yang and
               Wenhui Jiang and
              Hushuang Zeng and
               Beijun Shen and
               Hao Zhong},
  title     = {BugPecker: Locating Faulty Methods with Deep Learning on Revision Graphs},
  booktitle = {35th {IEEE/ACM} International Conference on Automated Software Engineering,
               {ASE} 2020, New Idea Track, Virtual Event, Australia},
  abbr = {ASE},
  abstract = {Given a bug report of a project, the task of locating the faults of the bug report is called fault localization. To help programmers in the fault localization process, many approaches have been proposed, and have achieved promising results to locate faulty files. How- ever, it is still challenging to locate faulty methods, because many methods are short and do not have sufficient details to determine whether they are faulty. In this paper, we present BugPecker, a novel approach to locate faulty methods based on its deep learn- ing on revision graphs. Its key idea includes (1) building revision graphs and capturing the details of past fixes as much as possible, and (2) discovering relations inside our revision graphs to expand the details for methods and calculating various features to assist our ranking. We have implemented BugPecker, and evaluated it on three open source projects. The early results show that BugPecker achieves a mean average precision (MAP) of 0.263 and mean re- ciprocal rank (MRR) of 0.291, which improve the prior approaches significantly. For example, BugPecker improves the MAP values of all three projects by five times, compared with two recent ap- proaches such as DNNLoc-m and BLIA 1.5.},
  selected = {true},
  pages     = {1083--1087},
  publisher = {{IEEE}},
  doi =  {10.1145/3324884.3418934},
  year      = {2020},
  pdf = {BugPecker.pdf},
  code = {https://github.com/RAddRiceee/BugPecker},
}

@inproceedings{DBLP:conf/kbse/DuCWLSC19,
  author    = {Tianjiao Du and
               Junming Cao and
               Qinyue Wu and
               Wei Li and
               Beijun Shen and
               Yuting Chen},
  title     = {CocoQa: Question Answering for Coding Conventions Over Knowledge Graphs},
  booktitle = {34th {IEEE/ACM} International Conference on Automated Software Engineering,
               {ASE} 2019, Tool Demo Track, San Diego, CA, USA},
  abbr = {ASE},
  abstract = {Coding convention plays an important role in guaranteeing software quality. However, coding conventions are usually informally presented and inconvenient for programmers to use. In this paper, we present CocoQa, a system that answers programmer's questions about coding conventions. CocoQa answers questions by querying a knowledge graph for coding conventions. It employs 1) a subgraph matching algorithm that parses the question into a SPARQL query, and 2) a machine comprehension algorithm that uses an end-to-end neural network to detect answers from searched paragraphs. We have implemented CocoQa, and evaluated it on a coding convention QA dataset. The results show that CocoQa can answer questions about coding conventions precisely. In particular, CocoQa can achieve a precision of 82.92% and a recall of 91.10%. Repository: https://github.com/14dtj/CocoQa/ Video: https://youtu.be/VQaXi1WydAU.},
  selected = {true},
  pages     = {1086--1089},
  publisher = {{IEEE}},
  year      = {2019},
  url       = {https://doi.org/10.1109/ASE.2019.00108},
  pdf = {CocoQa.pdf},
  code = {https://github.com/14dtj/CocoQa},
  demo = {https://youtu.be/VQaXi1WydAU},
  doi       = {10.1109/ASE.2019.00108},
  timestamp = {Sun, 19 Jan 2020 15:19:48 +0100},
  biburl    = {https://dblp.org/rec/conf/kbse/DuCWLSC19.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{DBLP:conf/seke/CaoDSLWC19,
  author    = {Junming Cao and
               Tianjiao Du and
               Beijun Shen and
               Wei Li and
               Qinyue Wu and
               Yuting Chen},
  editor    = {Angelo Perkusich},
  title     = {Constructing a Knowledge Base of Coding Conventions from Online Resources},
  booktitle = {The 31st International Conference on Software Engineering and Knowledge
               Engineering, {SEKE} 2019, Lisbon, Portugal},
  abbr = {SEKE},
  pages     = {5--14},
  publisher = {{KSI} Research Inc. and Knowledge Systems Institute Graduate School},
  year      = {2019},
  url       = {https://doi.org/10.18293/SEKE2019-123},
  doi       = {10.18293/SEKE2019-123},
  timestamp = {Wed, 14 Aug 2019 09:30:44 +0200},
  biburl    = {https://dblp.org/rec/conf/seke/CaoDSLWC19.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{DBLP:conf/seke/NiSCMC19,
  author    = {Zeyu Ni and
               Beijun Shen and
               Yuting Chen and
               Zhangyuan Meng and
               Junming Cao},
  editor    = {Angelo Perkusich},
  title     = {CrowDevBot: {A} Task-Oriented Conversational Bot for Software Crowdsourcing
               Platforms},
  booktitle = {The 31st International Conference on Software Engineering and Knowledge
               Engineering, {SEKE} 2019, Lisbon, Portugal},
  abbr = {SEKE},
  pages     = {410--522},
  publisher = {{KSI} Research Inc. and Knowledge Systems Institute Graduate School},
  year      = {2019},
  url       = {https://doi.org/10.18293/SEKE2019-068},
  doi       = {10.18293/SEKE2019-068},
  timestamp = {Wed, 14 Aug 2019 09:30:44 +0200},
  biburl    = {https://dblp.org/rec/conf/seke/NiSCMC19.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

